swagger:  "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version:      "v4"
  title:        "Analytics Reporting"
  description:  "Accesses Analytics report data."
  contact:
    name:       Google
    email:      google@exosite.com
  x-apiClientRegistration:
    description: 'TBD'
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - analytics
      description: 'TBD'
  x-logo:
    description: 'TBD'
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.2
      format: google
      url: 'https://analyticsreporting.googleapis.com/$discovery/rest?version=v4'
      version: v1
      description: 'TBD'
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: analyticsreporting
host: analyticsreporting.googleapis.com
basePath: /
tags:
  - name: reports
    description: 'TBD'
schemes:
  - https
externalDocs:
  description: 'TBD'
  url: 'https://developers.google.com/analytics/devguides/reporting/core/v4/'
securityDefinitions:
  description: 'TBD'
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/analytics': View and manage your Google Analytics data
      'https://www.googleapis.com/auth/analytics.readonly': View your Google Analytics data
    type: oauth2
parameters:
  description: 'TBD'
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string

################################################################################
#                                           Paths                              #
################################################################################
paths:
  /v4/reports:batchGet:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      tags:
        - reports
      description: Returns the Analytics data.
      operationId: analyticsreportingreportsbatchGet
      parameters:
        - in: body
          name: body
          description: 'TBD'
          schema:
            $ref: '#/definitions/GetReportsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GetReportsResponse'
        default:
          description: TBD
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/analytics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/analytics.readonly'

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Cohort:
    type: object
    description: |-
      Defines a cohort. A cohort is a group of users who share a common
      characteristic. For example, all users with the same acquisition date
      belong to the same cohort.
    properties:
      dateRange:
        $ref: '#/definitions/DateRange'
        description: |-
          This is used for `FIRST_VISIT_DATE` cohort, the cohort selects users
          whose first visit date is between start date and end date defined in the
          DateRange. The date ranges should be aligned for cohort requests. If the
          request contains `ga:cohortNthDay` it should be exactly one day long,
          if `ga:cohortNthWeek` it should be aligned to the week boundary (starting
          at Sunday and ending Saturday), and for `ga:cohortNthMonth` the date range
          should be aligned to the month (starting at the first and ending on the
          last day of the month).
          For LTV requests there are no such restrictions.
          You do not need to supply a date range for the
          `reportsRequest.dateRanges` field.
      name:
        type: string
        description: |-
          A unique name for the cohort. If not defined name will be auto-generated
          with values cohort_[1234...].
      type:
        type: string
        description: |-
          Type of the cohort. The only supported type as of now is
          `FIRST_VISIT_DATE`. If this field is unspecified the cohort is treated
          as `FIRST_VISIT_DATE` type cohort.
        enum:
          - UNSPECIFIED_COHORT_TYPE
          - FIRST_VISIT_DATE
  CohortGroup:
    type: object
    description: |-
      Defines a cohort group.
      For example:

          "cohortGroup": {
            "cohorts": [{
              "name": "cohort 1",
              "type": "FIRST_VISIT_DATE",
              "dateRange": { "startDate": "2015-08-01", "endDate": "2015-08-01" }
            },{
              "name": "cohort 2"
               "type": "FIRST_VISIT_DATE"
               "dateRange": { "startDate": "2015-07-01", "endDate": "2015-07-01" }
            }]
          }
    properties:
      cohorts:
        type: array
        description: The definition for the cohort.
        items:
          $ref: '#/definitions/Cohort'
      lifetimeValue:
        type: boolean
        description: |-
          Enable Life Time Value (LTV).  LTV measures lifetime value for users
          acquired through different channels.
          Please see:
          [Cohort Analysis](https://support.google.com/analytics/answer/6074676) and
          [Lifetime Value](https://support.google.com/analytics/answer/6182550)
          If the value of lifetimeValue is false:

          - The metric values are similar to the values in the web interface cohort
            report.
          - The cohort definition date ranges must be aligned to the calendar week
            and month. i.e. while requesting `ga:cohortNthWeek` the `startDate` in
            the cohort definition should be a Sunday and the `endDate` should be the
            following Saturday, and for `ga:cohortNthMonth`, the `startDate`
            should be the 1st of the month and `endDate` should be the last day
            of the month.

          When the lifetimeValue is true:

          - The metric values will correspond to the values in the web interface
            LifeTime value report.
          - The Lifetime Value report shows you how user value (Revenue) and
            engagement (Appviews, Goal Completions, Sessions, and Session Duration)
            grow during the 90 days after a user is acquired.
          - The metrics are calculated as a cumulative average per user per the time
            increment.
          - The cohort definition date ranges need not be aligned to the calendar
            week and month boundaries.
          - The `viewId` must be an
            [app view ID](https://support.google.com/analytics/answer/2649553#WebVersusAppViews)
  ColumnHeader:
    type: object
    description: Column headers.
    properties:
      dimensions:
        type: array
        description: The dimension names in the response.
        items:
          description: 'TBD'
          type: string
      metricHeader:
        $ref: '#/definitions/MetricHeader'
        description: Metric headers for the metrics in the response.
  DateRange:
    type: object
    description: |-
      A contiguous set of days: startDate, startDate + 1 day, ..., endDate.
      The start and end dates are specified in
      [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date format `YYYY-MM-DD`.
    properties:
      endDate:
        type: string
        description: The end date for the query in the format `YYYY-MM-DD`.
      startDate:
        type: string
        description: The start date for the query in the format `YYYY-MM-DD`.
  DateRangeValues:
    type: object
    description: |-
      Used to return a list of metrics for a single DateRange / dimension
      combination
    properties:
      pivotValueRegions:
        type: array
        description: The values of each pivot region.
        items:
          description: 'TBD'
          $ref: '#/definitions/PivotValueRegion'
      values:
        type: array
        description: Each value corresponds to each Metric in the request.
        items:
          type: string
          description: 'TBD'
  Dimension:
    type: object
    description: |-
      [Dimensions](https://support.google.com/analytics/answer/1033861)
      are attributes of your data. For example, the dimension `ga:city`
      indicates the city, for example, "Paris" or "New York", from which
      a session originates.
    properties:
      histogramBuckets:
        description: |-
          If non-empty, we place dimension values into buckets after string to
          int64. Dimension values that are not the string representation of an
          integral value will be converted to zero.  The bucket values have to be in
          increasing order.  Each bucket is closed on the lower end, and open on the
          upper end. The "first" bucket includes all values less than the first
          boundary, the "last" bucket includes all values up to infinity. Dimension
          values that fall in a bucket get transformed to a new dimension value. For
          example, if one gives a list of "0, 1, 3, 4, 7", then we return the
          following buckets:

          - bucket #1: values < 0, dimension value "<0"
          - bucket #2: values in [0,1), dimension value "0"
          - bucket #3: values in [1,3), dimension value "1-2"
          - bucket #4: values in [3,4), dimension value "3"
          - bucket #5: values in [4,7), dimension value "4-6"
          - bucket #6: values >= 7, dimension value "7+"

          NOTE: If you are applying histogram mutation on any dimension, and using
          that dimension in sort, you will want to use the sort type
          `HISTOGRAM_BUCKET` for that purpose. Without that the dimension values
          will be sorted according to dictionary
          (lexicographic) order. For example the ascending dictionary order is:

             "<50", "1001+", "121-1000", "50-120"

          And the ascending `HISTOGRAM_BUCKET` order is:

             "<50", "50-120", "121-1000", "1001+"

          The client has to explicitly request `"orderType": "HISTOGRAM_BUCKET"`
          for a histogram-mutated dimension.
        items:
          type: array
          description: 'TBD'
          format: int64
          type: string
      name:
        type: string
        description: 'Name of the dimension to fetch, for example `ga:browser`.'
  DimensionFilter:
    type: object
    description: Dimension filter specifies the filtering options on a dimension.
    properties:
      caseSensitive:
        type: boolean
        description: Should the match be case sensitive? Default is false.
      dimensionName:
        type: string
        description: The dimension to filter on. A DimensionFilter must contain a dimension.
      expressions:
        type: array
        description: |-
          Strings or regular expression to match against. Only the first value of
          the list is used for comparison unless the operator is `IN_LIST`.
          If `IN_LIST` operator, then the entire list is used to filter the
          dimensions as explained in the description of the `IN_LIST` operator.
        items:
          type: string
          description: 'TBD'
      not:
        type: boolean
        description: |-
          Logical `NOT` operator. If this boolean is set to true, then the matching
          dimension values will be excluded in the report. The default is false.
      operator:
        type: string
        description: How to match the dimension to the expression. The default is REGEXP.
        enum:
          - OPERATOR_UNSPECIFIED
          - REGEXP
          - BEGINS_WITH
          - ENDS_WITH
          - PARTIAL
          - EXACT
          - NUMERIC_EQUAL
          - NUMERIC_GREATER_THAN
          - NUMERIC_LESS_THAN
          - IN_LIST
  DimensionFilterClause:
    type: object
    description: |-
      A group of dimension filters. Set the operator value to specify how
      the filters are logically combined.
    properties:
      filters:
        type: array
        description: |-
          The repeated set of filters. They are logically combined based on the
          operator specified.
        items:
          description: 'TBD'
          $ref: '#/definitions/DimensionFilter'
      operator:
        type: string
        description: |-
          The operator for combining multiple dimension filters. If unspecified, it
          is treated as an `OR`.
        enum:
          - OPERATOR_UNSPECIFIED
          - OR
          - AND